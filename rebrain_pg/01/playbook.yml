- name: RH
  hosts: rh
  become: true
  vars:
    - pg_ver: 11
    - pg_user: pgsqlcentos
  tasks:
    - name: Install repository
      dnf:
        name: https://download.postgresql.org/pub/repos/yum/reporpms/EL-8-x86_64/pgdg-redhat-repo-latest.noarch.rpm
        state: present
    - name: disable postgresq module
      shell: 'dnf -qy module disable postgresql'
    - name: install postgresq
      dnf:
        name: 
          - postgresql{{ pg_ver }}-server.x86_64
          - python3-pip
        state: installed
    - name: initialize the database
      shell: /usr/pgsql-{{ pg_ver }}/bin/postgresql-{{ pg_ver }}-setup initdb
      args:
        creates: /var/lib/pgsql/{{ pg_ver }}/data/PG_VERSION
    - name: enable automatic start
      shell: systemctl enable postgresql-{{ pg_ver }}
    - name: Start
      shell: systemctl start postgresql-{{ pg_ver }}
    - name: install psycopg2-binary
      pip:
        name: psycopg2-binary
    - name: Create user
      become_user: postgres
      postgresql_user: name={{ pg_user }} password='' db=postgres priv=ALL state=present role_attr_flags=SUPERUSER
#      no_log: yes

- name: UBUNTU19
  hosts: u19
  become: true
  vars:
    - pg_ver: 12
    - pg_user: pgsqlubuntu18
  tasks:
    - name: Get pgdg.list file stat
      stat: path=/etc/apt/sources.list.d/pgdg.list
      register: p
    - name: Create file if needed
      file: path=/etc/apt/sources.list.d/pgdg.list state=touch owner=root group=root mode=0644
      when: p.stat.exists is defined and not p.stat.exists
    - name: Create the file repository configuration
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/pgdg.list
        line: 'deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main'
        state: present
    - name: Import the repository signing key
      shell: wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
    - name: Update the package lists
      apt:
        update_cache: yes
        name: 
          - postgresql-{{ pg_ver }}
          - python3-pip
        state: present
    - name: install psycopg2-binary
      pip:
        name: psycopg2-binary
    - name: Create user
      become_user: postgres
      postgresql_user: name={{ pg_user }} password='' db=postgres priv=ALL state=present role_attr_flags=SUPERUSER

- name: ubuntu20
  hosts: u20
  become: true
  vars:
    - pg_user: pgsqlubuntu20
    - pg_ver: 13.1
  tasks:
    - name: Install required packages
      apt:
        update_cache: yes
        name:
          - make
          - readline-common
          - libreadline-dev
          - zlib1g
          - zlib1g-dev
          - build-essential
          - python3-pip
        state: present
    - name: install psycopg2-binary
      pip:
        name: psycopg2-binary
    - name: Download and unarchive sorces
      ansible.builtin.unarchive:
        src: https://ftp.postgresql.org/pub/source/v{{ pg_ver }}/postgresql-{{ pg_ver }}.tar.bz2
        dest: ./
        remote_src: yes
        creates: ./postgresql-{{ pg_ver }}
    - name: configure
      command: '"{{ item }}" chdir=./postgresql-{{ pg_ver }}'
      with_items:
        - ./configure
    - name: make
      command: '"{{ item }}" chdir=./postgresql-{{ pg_ver }}'
      with_items:
        - make
    - name: make install
      command: 'make install chdir=./postgresql-{{ pg_ver }}'
    - name: Create OS user
      ansible.builtin.user:
        name: postgres
    - name: Create a directory
      ansible.builtin.file:
        path: /usr/local/pgsql/data
        owner: postgres
        state: directory
#        mode: '0755'
    - name: initdb
      become_user: postgres
      shell: /usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data
      args:
        creates: /usr/local/pgsql/data/PG_VERSION
    - name: Start postgres
      become_user: postgres
      shell: /usr/local/pgsql/bin/pg_ctl -D /usr/local/pgsql/data -l logfile start
      args:
        creates: /usr/local/pgsql/data/postmaster.pid
    - name: Create user
      environment:
        PATH: /usr/local/pgsql/bin
      become_user: postgres
      postgresql_user: name={{ pg_user }} password='' db=postgres priv=ALL state=present role_attr_flags=SUPERUSER login_host=127.0.0.1
